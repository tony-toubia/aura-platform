# Google Cloud Build configuration for Aura Platform
steps:
  # Build and push the dashboard/web application
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/aura-dashboard:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/aura-dashboard:latest'
      - '-f'
      - 'Dockerfile'
      - '--build-arg'
      - 'NEXT_PUBLIC_SUPABASE_URL=https://ahzmfkjtiiyuipweaktx.supabase.co'
      - '--build-arg'
      - 'NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFoem1ma2p0aWl5dWlwd2Vha3R4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI2Mzc3OTksImV4cCI6MjA2ODIxMzc5OX0.adTiPqedJv1TvuDvj53HGA_jlZr23MJ_L3jiKDb0GTk'
      - '.'
    id: 'build-dashboard'

  # Build and push the marketing/landing page
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/aura-marketing:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/aura-marketing:latest'
      - '-f'
      - 'Dockerfile.marketing'
      - '.'
    id: 'build-marketing'

  # Build and push the API service
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/aura-api:$COMMIT_SHA'
      - '-t'
      - 'gcr.io/$PROJECT_ID/aura-api:latest'
      - '-f'
      - 'Dockerfile.api'
      - '.'
    id: 'build-api'

  # Push dashboard image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/aura-dashboard:$COMMIT_SHA'
    waitFor: ['build-dashboard']
    id: 'push-dashboard-sha'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/aura-dashboard:latest'
    waitFor: ['build-dashboard']
    id: 'push-dashboard-latest'

  # Push marketing image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/aura-marketing:$COMMIT_SHA'
    waitFor: ['build-marketing']
    id: 'push-marketing-sha'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/aura-marketing:latest'
    waitFor: ['build-marketing']
    id: 'push-marketing-latest'

  # Push API image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/aura-api:$COMMIT_SHA'
    waitFor: ['build-api']
    id: 'push-api-sha'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/aura-api:latest'
    waitFor: ['build-api']
    id: 'push-api-latest'

  # Validate environment before deployment
  - name: 'node:18'
    entrypoint: 'node'
    args: ['scripts/validate-env.js']
    id: 'validate-env'

  # Deploy dashboard to Cloud Run with environment variables
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args: ['deploy/deploy-with-env.sh']
    waitFor: ['push-dashboard-sha', 'validate-env']
    id: 'deploy-dashboard'

  # Deploy marketing to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'aura-marketing'
      - '--image'
      - 'gcr.io/$PROJECT_ID/aura-marketing:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3000'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '5'
      - '--set-env-vars'
      - 'NODE_ENV=production'
    waitFor: ['push-marketing-sha']

  # Deploy API to Cloud Run with Stripe secrets
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'aura-api'
      - '--image'
      - 'gcr.io/$PROJECT_ID/aura-api:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '3001'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '0'
      - '--max-instances'
      - '5'
      - '--update-secrets=STRIPE_SECRET_KEY=STRIPE_SECRET_KEY:latest,NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=STRIPE_PUBLISHABLE_KEY:latest,STRIPE_WEBHOOK_SECRET=STRIPE_WEBHOOK_SECRET:latest,STRIPE_PERSONAL_PRICE_ID=STRIPE_PERSONAL_PRICE_ID:latest,STRIPE_FAMILY_PRICE_ID=STRIPE_FAMILY_PRICE_ID:latest,STRIPE_BUSINESS_PRICE_ID=STRIPE_BUSINESS_PRICE_ID:latest'
      - '--set-env-vars'
      - 'NODE_ENV=production'
    waitFor: ['push-api-sha']

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/aura-dashboard:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/aura-dashboard:latest'
  - 'gcr.io/$PROJECT_ID/aura-marketing:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/aura-marketing:latest'
  - 'gcr.io/$PROJECT_ID/aura-api:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/aura-api:latest'

# Build configuration
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY

# Timeout for the entire build
timeout: '1200s'